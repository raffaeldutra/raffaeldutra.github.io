before_script:
  - mkdir -p public/resume
  - apk update && apk add curl

stages:
  - environments
  - publishing
  - deploy-s3
  - deploy-page
  - testing

environments:
  stage: environments
  script:
    - |
      if [ "${CI_ENVIRONMENT_SLUG}" == "develop" ]; then
          BUCKET_NAME_STATIC="www.rafaeldutra.me"
      else
          BUCKET_NAME_STATIC="${CI_COMMIT_REF_SLUG}.rafaeldutra.me"
      fi

.publishing: &publishing |
  docker run --rm -v $(pwd):/src -v $(pwd)/public:/src/public raffaeldutra/docker-gohugo
  
  curl
  --form input_files[]=@content/cv/me.en.md
  --form from=markdown
  --form to=pdf
  --form other_files[]=@content/cv/css/resume.css
  http://c.docverter.com/convert > public/resume/rafael-dutra-resume-en.pdf

  curl
  --form input_files[]=@content/cv/me.md
  --form from=markdown
  --form to=pdf
  --form other_files[]=@content/cv/css/resume.css
  http://c.docverter.com/convert > public/resume/rafael-dutra-resume.pdf
  artifacts:
    paths:
      - public

.deploy-s3: &deploy-s3
  image: python:latest
  stage: deploy-s3
  before_script:
    - pip install awscli
  script:
    - *publishing
    - aws s3 cp public s3://${BUCKET_NAME_STATIC} --recursive
  environment:
    name: ${CI_COMMIT_REF_SLUG}
  artifacts:
    paths:
      - public

deploy-s3-branches:
  <<: *deploy-s3
  only:
    - branches

deploy-s3-prod:
  <<: *deploy-s3
  only:
    - develop
  when: manual

pages:
  stage: deploy-page
  script:
    - *publishing
  only:
    - develop
  when: manual
  artifacts:
    paths:
      - public

testing:
  stage: testing
  script:
    - docker run --rm byrnedo/alpine-curl curl --silent ${BUCKET_NAME_STATIC} > /dev/null || exit 1